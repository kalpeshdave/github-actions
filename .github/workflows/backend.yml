# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:11-alpine
  #       ports:
  #         - "5432:5432"
  #       env:
  #         POSTGRES_DB: rails_test
  #         POSTGRES_USER: rails
  #         POSTGRES_PASSWORD: password
  #   env:
  #     RAILS_ENV: test
  #     DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     # Add or replace dependency steps here
  #     - name: Install Ruby and gems
  #       uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
  #       with:
  #         bundler-cache: true
  #     # Add or replace database setup steps here
  #     - name: Set up database schema
  #       run: bin/rails db:schema:load
  #     # Add or replace test runners here
  #     - name: Run tests
  #       run: bin/rake

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - run:
        name: Install Bundler
        run: gem install bundler -v 2.2.33
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.6
          bundler-cache: true
      - name: Add node source
        run: curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -

      - name: Install System Dependencies
        run: sudo apt-get update --allow-releaseinfo-change && sudo apt-get install g++ qt5-default libqt5webkit5-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x nano libcurl4 libcurl4-openssl-dev libmagickcore-dev libmagickwand-dev imagemagick xvfb nodejs

      - name: Show node version
        run: node -v

      - name: Show ruby version
        run: ruby -v

      - name: Install yarn
        run: sudo npm install --global yarn

      - name: Wait for Database Connection
        run: dockerize -wait tcp://localhost:3306 -timeout 1m

      - name: Install mysql client
        run: sudo apt-get update && sudo apt-get install -y default-mysql-client

      - name: Create DB read user
        run: mysql -h 127.0.0.1 -u root -e "CREATE USER 'ezrirzreadonly'@'127.0.0.1';"
      - name: Grant access
        run: mysql -h 127.0.0.1 -u root -e "GRANT SELECT, SHOW VIEW ON ezrirx_test.* TO 'ezrirzreadonly'@'127.0.0.1';"
      - name: Flush privileges for read DB user
        run: mysql -h 127.0.0.1 -u root -e "FLUSH PRIVILEGES;"
      - name: Security audit dependencies
        run: bin/bundler-audit --update
      - name: Lint Ruby files
        run: bin/rubocop --parallel
